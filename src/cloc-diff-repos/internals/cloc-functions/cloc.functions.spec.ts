import { expect } from 'chai';
import { runCloc } from './cloc.functions';

// #copilot - most of the boilerplate of these tests was generated by copilot
describe('runCloc', () => {
    it('should return an array of language statistics', (done) => {
        runCloc('./src').subscribe((stats) => {
            expect(stats instanceof Array).to.be.true;
            expect(stats.length).greaterThan(0);
            expect(!!stats[0].language).to.be.true;
            expect(!!stats[0].nFiles).to.be.true;
            expect(!!stats[0].blank).to.be.true;
            expect(!!stats[0].comment).to.be.true;
            expect(!!stats[0].code).to.be.true;
            done();
        });
    });

    it('should return statistics for TypeScript files', (done) => {
        runCloc('./src').subscribe((stats) => {
            const typescriptStats = stats.find((stat) => stat.language === 'TypeScript');
            expect(!!typescriptStats).to.be.true;
            expect(typescriptStats!.nFiles).greaterThan(0);
            expect(typescriptStats!.blank).greaterThan(0);
            expect(typescriptStats!.comment).greaterThan(0);
            expect(typescriptStats!.code).greaterThan(0);
            done();
        });
    });

    it('should return statistics reading from a git repo commit - the commit is from the repo of this project', (done) => {
        runCloc('2c6f2ae87b539590f5a0f93682f5440ca845bc9c').subscribe((stats) => {
            const typescriptStats = stats.find((stat) => stat.language === 'TypeScript');
            expect(!!typescriptStats).to.be.true;
            expect(typescriptStats!.nFiles).greaterThan(0);
            expect(typescriptStats!.blank).greaterThan(0);
            expect(typescriptStats!.comment).greaterThan(0);
            expect(typescriptStats!.code).greaterThan(0);
            done();
        });
    });
});