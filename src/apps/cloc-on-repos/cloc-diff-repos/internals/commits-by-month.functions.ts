import { CommitCompact } from "../../../../git-functions/commit.model"

// commitsByMonth returns an instance of CommitsByMonths, where CommitCompact objects are grouped by month
// #copilot - the entire method has been generated by copilot, the only thing I changes was the key where copilot put
// month first and year second, I changed it to year first and month second
// I also changed the format of the month to be 2 digits
export function newCommitsByMonth(commits: CommitCompact[]) {
    const commitsByMonth = commits.reduce((acc, commit) => {
        const key = yearMonthFromDate(commit.date)
        if (!acc[key]) {
            acc[key] = {
                commits: [],
                authors: new Set<string>()
            }
        }
        acc[key].commits.push(commit)
        acc[key].authors.add(commit.author)
        return acc
    }, {} as CommitsByMonths)
    return commitsByMonth
}

export interface CommitsByMonths {
    [yearMonth: string]: {
        commits: CommitCompact[],
        authors: Set<string>
    }
}

export function yearMonthFromDate(date: Date) {
    const month = ("0" + (date.getMonth() + 1)).slice(-2)
    const year = date.getFullYear()
    return `${year}-${month}`
}